services:

  d7h-redis:
    image: redis:latest
    container_name: d7h-redis
    hostname: redis
    restart: always
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - ./data/redis:/data
    networks:
      - network
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  d7h-redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: d7h-redis-commander
    restart: always
    environment:
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      REDIS_DB: "0"
      NO_DEFAULTS: "true"
      NO_AUTH: "true" ## works, in live use HTTP_USER and HTTP_PASSWORD instead of NO_AUTH
      #HTTP_USER: ${HTTP_USER}
      #HTTP_PASSWORD: ${HTTP_PASSWORD}
    ports:
      -  ${REDIS_COMMANDER_PORT}:8081
    depends_on:
      - d7h-redis
    networks:
      - network

  d7h-mariadb:
    image: mariadb:latest
    container_name: d7h-mariadb
    restart: always
    env_file:
    - .env
    volumes:
      - ./data/mariadb:/var/lib/mysql
    networks:
      - network
    healthcheck:
      # https://mariadb.com/kb/en/using-healthcheck-sh/
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  d7h-pma:
    image: phpmyadmin/phpmyadmin
    container_name: d7h-pma
    restart: always
    environment:
      PMA_HOST: d7h-mariadb
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      PMA_PORT: 3306
    ports:
      - ${PMA_PORT}:80
    depends_on:
      - d7h-mariadb
    networks:
      - network

  d7h-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: d7h-web
    restart: always
    command: >
      sh -c "python3 manage.py collectstatic --noinput && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./pr:/app
      - ./pr/static:/app/static
    ports:
      - ${WEB_PORT}:8000
    env_file:
    - .env
    depends_on:
      # https://docs.docker.com/compose/startup-order/
      d7h-mariadb:
        condition: service_healthy
      d7h-redis:
        condition: service_healthy

    networks:
      - network

networks:
  network:
    driver: bridge


# sudo chmod -R 755 ./data/db
# sudo chown -R $USER:$USER ./data/db --vist ei lÃ¤inud tarvis
# docker compose run web django-admin startproject pr .
# docker-compose down
# docker-compose up -d --build  --remove-orphans

#  clear; python3 p.py > out.txt;  docker-compose down; docker-compose up -d --build --remove-orphans
# docker-compose logs web
# none-pildid maha
# docker rmi -f $(docker images -f "dangling=true" -q)
# docker rm $(docker ps -a -q)    // remove all working containers
# docker rm -f $(docker ps -a -q) // remove all containers
# docker-compose logs d7h-web
# https://www.youtube.com/watch?v=B38aDwUpcFc
# https://www.youtube.com/watch?v=c708Nf0cHrs&t=1441s
# https://www.youtube.com/watch?v=LPeerVUaqz4


# docker compose run d7h-web python manage.py startapp base
# sudo chown -R $USER:$USER ./pr/base
# sudo chown -R $USER:$USER ./pr
# docker compose run d7h-web python manage.py makemigrations
# docker compose run d7h-web python manage.py migrate
# docker compose run d7h-web python manage.py runserver
# docker compose down